<% @page_title = t('admin.hardware_servers.show.title', :name => @hardware_server.host) %>
<% @page_icon = 'server.png' %>

<% javascript_tag do -%>
Ext.onReady(function() {

  <%= render :partial => 'admin/virtual_servers/edit_form' %>

  var changeStateAction = function(action) {
    Owp.list.groupAction({
      gridName: 'virtualServersGrid',
      url: '<%= url_for :controller => 'admin/virtual-servers' %>' + '/' + action,
      command: action,
      waitMsg: '<%= tjs('form.performing_task') %>',
      failure: {
        title: '<%= tjs('form.error.title') %>',
        msg: '<%= tjs('admin.virtual_servers.form.change_state.failed') %>'
      }
    });
  }

  var store = new Ext.data.JsonStore({
    url: '<%= url_for :controller => 'admin/virtual-servers', :action => 'list_data', :hardware_server_id => @hardware_server.id %>',
    root: 'data',
    autoLoad: true,
    data: <%= { :data => @virtual_servers_list }.to_json %>,
    sortInfo: { field: 'identity', direction: 'ASC' },
    fields: [
      { name: 'id' },
      { name: 'identity', sortType: 'asInt', type: 'int' },
      { name: 'ip_address' },
      { name: 'host_name' },
      { name: 'state' },
      { name: 'os_template_name' },
      { name: 'memory' },
      { name: 'diskspace' },
      { name: 'owner' },
      { name: 'expiration_date' },
      { name: 'is_expired' },
      { name: 'description' }
    ]
  });
  
  var selectionModel = new Ext.grid.CheckboxSelectionModel({
    renderer: function(value, metaData) {
      metaData.cellAttr = 'rowspan="2"';
      return Ext.grid.CheckboxSelectionModel.prototype.renderer.apply(this, arguments);
    },
    listeners: {
      selectionchange: function(selectionModel) {
        if (selectionModel.getCount()) {
          virtualServersGrid.removeButton.enable();
          virtualServersGrid.changeStateButton.enable();
        } else {
          virtualServersGrid.removeButton.disable();
          virtualServersGrid.changeStateButton.disable();
        }
        
        if (1 == selectionModel.getCount()) {
          virtualServersGrid.editButton.enable();
        } else {
          virtualServersGrid.editButton.disable();
        }
      }
    }
  });

  var virtualServersGrid = <%= render :partial => 'admin/virtual_servers/grid' %>

  var statsStore = new Ext.data.JsonStore({
    url: '<%= url_for :controller => 'admin/hardware-servers', :action => 'get_stats', :id => @hardware_server.id %>',
    root: 'data',
    data: <%= { :data => @hardware_server_stats }.to_json %>,
    autoLoad: true,
    fields: [
      { name: 'parameter' },
      { name: 'value' }
    ]
  });

  var hwServerStatsGrid = new Ext.grid.GridPanel({
    id: 'hwServerStatsGrid',
    title: '<%= tjs('admin.hardware_servers.stats.title') %>',
    region: 'north',
    loadMask: true,
    collapsible: true,
    autoWidth: true,
    height: 150,
    autoExpandColumn: 'value',
    stateId: 'hwServerStatsGrid',
    iconCls: 'icon-items-list',
    split: true,
    store: statsStore,
    tools: [{ 
      id: 'refresh',
      handler: function() {
        hwServerStatsGrid.getStore().reload();
      }
    }],
    cm: new Ext.grid.ColumnModel([{
      id: 'parameter',
      header: '<%= tjs('admin.hardware_servers.stats.column.parameter') %>',
      width: 250,
      dataIndex: 'parameter'
    }, {
      id: 'value',
      header: '<%= tjs('admin.hardware_servers.stats.column.value') %>',
      dataIndex: 'value',
      renderer: function(value) {
        if ('string' == typeof value) {
          return value;
        } else {
          var progressBarId = Ext.id();
          (function() {
            new Ext.ProgressBar({
              renderTo: progressBarId,
              value: value['percent'],
              width: 100,
              height: 14
            });
          }).defer(25);
          
          return '<div><div style="float: left; padding-right: 10px;" id="' + progressBarId + '"></div> <div>' + value['text'] + '</div></div>';
        }
      }
    }])
  });
  
  var panelsWrapper = new Ext.Panel({
    layout: 'border',
    border: false,
    items: [ hwServerStatsGrid, virtualServersGrid ]
  });

  Owp.layout.addToCenter(panelsWrapper);
  
  var mainContentCenterPanel = Ext.getCmp('mainContentCenterPanel');
  
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.hardware_servers.top_toolbar.server_templates') %>',
    icon: '<%= image_path 'package.png' %>',
    handler: function() {
      document.location.href = '<%= url_for :controller => 'admin/server-templates', :action => 'list', :hardware_server_id => @hardware_server.id %>';
    }
  });
  
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.hardware_servers.top_toolbar.os_templates') %>',
    icon: '<%= image_path 'tux.png' %>',
    handler: function() {
      document.location.href = '<%= url_for :controller => 'admin/os-templates', :action => 'list', :hardware_server_id => @hardware_server.id %>';
    }
  });
  
  mainContentCenterPanel.doLayout();
});
<% end -%>
